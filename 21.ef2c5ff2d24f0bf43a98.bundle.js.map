{"version":3,"file":"21.ef2c5ff2d24f0bf43a98.bundle.js","sources":["webpack:///./fields/code/node_modules/brace/ext/settings_menu.js"],"sourcesContent":["ace.define(\"ace/ext/menu_tools/element_generator\", [\"require\", \"exports\", \"module\"], function (acequire, exports, module) {\n  'use strict';\n\n  module.exports.createOption = function createOption(obj) {\n    var attribute;\n    var el = document.createElement('option');\n\n    for (attribute in obj) {\n      if (obj.hasOwnProperty(attribute)) {\n        if (attribute === 'selected') {\n          el.setAttribute(attribute, obj[attribute]);\n        } else {\n          el[attribute] = obj[attribute];\n        }\n      }\n    }\n\n    return el;\n  };\n\n  module.exports.createCheckbox = function createCheckbox(id, checked, clss) {\n    var el = document.createElement('input');\n    el.setAttribute('type', 'checkbox');\n    el.setAttribute('id', id);\n    el.setAttribute('name', id);\n    el.setAttribute('value', checked);\n    el.setAttribute('class', clss);\n\n    if (checked) {\n      el.setAttribute('checked', 'checked');\n    }\n\n    return el;\n  };\n\n  module.exports.createInput = function createInput(id, value, clss) {\n    var el = document.createElement('input');\n    el.setAttribute('type', 'text');\n    el.setAttribute('id', id);\n    el.setAttribute('name', id);\n    el.setAttribute('value', value);\n    el.setAttribute('class', clss);\n    return el;\n  };\n\n  module.exports.createLabel = function createLabel(text, labelFor) {\n    var el = document.createElement('label');\n    el.setAttribute('for', labelFor);\n    el.textContent = text;\n    return el;\n  };\n\n  module.exports.createSelection = function createSelection(id, values, clss) {\n    var el = document.createElement('select');\n    el.setAttribute('id', id);\n    el.setAttribute('name', id);\n    el.setAttribute('class', clss);\n    values.forEach(function (item) {\n      el.appendChild(module.exports.createOption(item));\n    });\n    return el;\n  };\n});\nace.define(\"ace/ext/modelist\", [\"require\", \"exports\", \"module\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var modes = [];\n\n  function getModeForPath(path) {\n    var mode = modesByName.text;\n    var fileName = path.split(/[\\/\\\\]/).pop();\n\n    for (var i = 0; i < modes.length; i++) {\n      if (modes[i].supportsFile(fileName)) {\n        mode = modes[i];\n        break;\n      }\n    }\n\n    return mode;\n  }\n\n  var Mode = function Mode(name, caption, extensions) {\n    this.name = name;\n    this.caption = caption;\n    this.mode = \"ace/mode/\" + name;\n    this.extensions = extensions;\n    var re;\n\n    if (/\\^/.test(extensions)) {\n      re = extensions.replace(/\\|(\\^)?/g, function (a, b) {\n        return \"$|\" + (b ? \"^\" : \"^.*\\\\.\");\n      }) + \"$\";\n    } else {\n      re = \"^.*\\\\.(\" + extensions + \")$\";\n    }\n\n    this.extRe = new RegExp(re, \"gi\");\n  };\n\n  Mode.prototype.supportsFile = function (filename) {\n    return filename.match(this.extRe);\n  };\n\n  var supportedModes = {\n    ABAP: [\"abap\"],\n    ABC: [\"abc\"],\n    ActionScript: [\"as\"],\n    ADA: [\"ada|adb\"],\n    Apache_Conf: [\"^htaccess|^htgroups|^htpasswd|^conf|htaccess|htgroups|htpasswd\"],\n    AsciiDoc: [\"asciidoc|adoc\"],\n    Assembly_x86: [\"asm|a\"],\n    AutoHotKey: [\"ahk\"],\n    BatchFile: [\"bat|cmd\"],\n    Bro: [\"bro\"],\n    C_Cpp: [\"cpp|c|cc|cxx|h|hh|hpp|ino\"],\n    C9Search: [\"c9search_results\"],\n    Cirru: [\"cirru|cr\"],\n    Clojure: [\"clj|cljs\"],\n    Cobol: [\"CBL|COB\"],\n    coffee: [\"coffee|cf|cson|^Cakefile\"],\n    ColdFusion: [\"cfm\"],\n    CSharp: [\"cs\"],\n    CSS: [\"css\"],\n    Curly: [\"curly\"],\n    D: [\"d|di\"],\n    Dart: [\"dart\"],\n    Diff: [\"diff|patch\"],\n    Dockerfile: [\"^Dockerfile\"],\n    Dot: [\"dot\"],\n    Drools: [\"drl\"],\n    Dummy: [\"dummy\"],\n    DummySyntax: [\"dummy\"],\n    Eiffel: [\"e|ge\"],\n    EJS: [\"ejs\"],\n    Elixir: [\"ex|exs\"],\n    Elm: [\"elm\"],\n    Erlang: [\"erl|hrl\"],\n    Forth: [\"frt|fs|ldr|fth|4th\"],\n    Fortran: [\"f|f90\"],\n    FTL: [\"ftl\"],\n    Gcode: [\"gcode\"],\n    Gherkin: [\"feature\"],\n    Gitignore: [\"^.gitignore\"],\n    Glsl: [\"glsl|frag|vert\"],\n    Gobstones: [\"gbs\"],\n    golang: [\"go\"],\n    Groovy: [\"groovy\"],\n    HAML: [\"haml\"],\n    Handlebars: [\"hbs|handlebars|tpl|mustache\"],\n    Haskell: [\"hs\"],\n    Haskell_Cabal: [\"cabal\"],\n    haXe: [\"hx\"],\n    Hjson: [\"hjson\"],\n    HTML: [\"html|htm|xhtml\"],\n    HTML_Elixir: [\"eex|html.eex\"],\n    HTML_Ruby: [\"erb|rhtml|html.erb\"],\n    INI: [\"ini|conf|cfg|prefs\"],\n    Io: [\"io\"],\n    Jack: [\"jack\"],\n    Jade: [\"jade|pug\"],\n    Java: [\"java\"],\n    JavaScript: [\"js|jsm|jsx\"],\n    JSON: [\"json\"],\n    JSONiq: [\"jq\"],\n    JSP: [\"jsp\"],\n    JSX: [\"jsx\"],\n    Julia: [\"jl\"],\n    Kotlin: [\"kt|kts\"],\n    LaTeX: [\"tex|latex|ltx|bib\"],\n    LESS: [\"less\"],\n    Liquid: [\"liquid\"],\n    Lisp: [\"lisp\"],\n    LiveScript: [\"ls\"],\n    LogiQL: [\"logic|lql\"],\n    LSL: [\"lsl\"],\n    Lua: [\"lua\"],\n    LuaPage: [\"lp\"],\n    Lucene: [\"lucene\"],\n    Makefile: [\"^Makefile|^GNUmakefile|^makefile|^OCamlMakefile|make\"],\n    Markdown: [\"md|markdown\"],\n    Mask: [\"mask\"],\n    MATLAB: [\"matlab\"],\n    Maze: [\"mz\"],\n    MEL: [\"mel\"],\n    MUSHCode: [\"mc|mush\"],\n    MySQL: [\"mysql\"],\n    Nix: [\"nix\"],\n    NSIS: [\"nsi|nsh\"],\n    ObjectiveC: [\"m|mm\"],\n    OCaml: [\"ml|mli\"],\n    Pascal: [\"pas|p\"],\n    Perl: [\"pl|pm\"],\n    pgSQL: [\"pgsql\"],\n    PHP: [\"php|phtml|shtml|php3|php4|php5|phps|phpt|aw|ctp|module\"],\n    Powershell: [\"ps1\"],\n    Praat: [\"praat|praatscript|psc|proc\"],\n    Prolog: [\"plg|prolog\"],\n    Properties: [\"properties\"],\n    Protobuf: [\"proto\"],\n    Python: [\"py\"],\n    R: [\"r\"],\n    Razor: [\"cshtml|asp\"],\n    RDoc: [\"Rd\"],\n    RHTML: [\"Rhtml\"],\n    RST: [\"rst\"],\n    Ruby: [\"rb|ru|gemspec|rake|^Guardfile|^Rakefile|^Gemfile\"],\n    Rust: [\"rs\"],\n    SASS: [\"sass\"],\n    SCAD: [\"scad\"],\n    Scala: [\"scala\"],\n    Scheme: [\"scm|sm|rkt|oak|scheme\"],\n    SCSS: [\"scss\"],\n    SH: [\"sh|bash|^.bashrc\"],\n    SJS: [\"sjs\"],\n    Smarty: [\"smarty|tpl\"],\n    snippets: [\"snippets\"],\n    Soy_Template: [\"soy\"],\n    Space: [\"space\"],\n    SQL: [\"sql\"],\n    SQLServer: [\"sqlserver\"],\n    Stylus: [\"styl|stylus\"],\n    SVG: [\"svg\"],\n    Swift: [\"swift\"],\n    Tcl: [\"tcl\"],\n    Tex: [\"tex\"],\n    Text: [\"txt\"],\n    Textile: [\"textile\"],\n    Toml: [\"toml\"],\n    TSX: [\"tsx\"],\n    Twig: [\"twig|swig\"],\n    Typescript: [\"ts|typescript|str\"],\n    Vala: [\"vala\"],\n    VBScript: [\"vbs|vb\"],\n    Velocity: [\"vm\"],\n    Verilog: [\"v|vh|sv|svh\"],\n    VHDL: [\"vhd|vhdl\"],\n    Wollok: [\"wlk|wpgm|wtest\"],\n    XML: [\"xml|rdf|rss|wsdl|xslt|atom|mathml|mml|xul|xbl|xaml\"],\n    XQuery: [\"xq\"],\n    YAML: [\"yaml|yml\"],\n    Django: [\"html\"]\n  };\n  var nameOverrides = {\n    ObjectiveC: \"Objective-C\",\n    CSharp: \"C#\",\n    golang: \"Go\",\n    C_Cpp: \"C and C++\",\n    coffee: \"CoffeeScript\",\n    HTML_Ruby: \"HTML (Ruby)\",\n    HTML_Elixir: \"HTML (Elixir)\",\n    FTL: \"FreeMarker\"\n  };\n  var modesByName = {};\n\n  for (var name in supportedModes) {\n    var data = supportedModes[name];\n    var displayName = (nameOverrides[name] || name).replace(/_/g, \" \");\n    var filename = name.toLowerCase();\n    var mode = new Mode(filename, displayName, data[0]);\n    modesByName[filename] = mode;\n    modes.push(mode);\n  }\n\n  module.exports = {\n    getModeForPath: getModeForPath,\n    modes: modes,\n    modesByName: modesByName\n  };\n});\nace.define(\"ace/ext/themelist\", [\"require\", \"exports\", \"module\", \"ace/lib/fixoldbrowsers\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  acequire(\"ace/lib/fixoldbrowsers\");\n  var themeData = [[\"Chrome\"], [\"Clouds\"], [\"Crimson Editor\"], [\"Dawn\"], [\"Dreamweaver\"], [\"Eclipse\"], [\"GitHub\"], [\"IPlastic\"], [\"Solarized Light\"], [\"TextMate\"], [\"Tomorrow\"], [\"XCode\"], [\"Kuroir\"], [\"KatzenMilch\"], [\"SQL Server\", \"sqlserver\", \"light\"], [\"Ambiance\", \"ambiance\", \"dark\"], [\"Chaos\", \"chaos\", \"dark\"], [\"Clouds Midnight\", \"clouds_midnight\", \"dark\"], [\"Cobalt\", \"cobalt\", \"dark\"], [\"Gruvbox\", \"gruvbox\", \"dark\"], [\"idle Fingers\", \"idle_fingers\", \"dark\"], [\"krTheme\", \"kr_theme\", \"dark\"], [\"Merbivore\", \"merbivore\", \"dark\"], [\"Merbivore Soft\", \"merbivore_soft\", \"dark\"], [\"Mono Industrial\", \"mono_industrial\", \"dark\"], [\"Monokai\", \"monokai\", \"dark\"], [\"Pastel on dark\", \"pastel_on_dark\", \"dark\"], [\"Solarized Dark\", \"solarized_dark\", \"dark\"], [\"Terminal\", \"terminal\", \"dark\"], [\"Tomorrow Night\", \"tomorrow_night\", \"dark\"], [\"Tomorrow Night Blue\", \"tomorrow_night_blue\", \"dark\"], [\"Tomorrow Night Bright\", \"tomorrow_night_bright\", \"dark\"], [\"Tomorrow Night 80s\", \"tomorrow_night_eighties\", \"dark\"], [\"Twilight\", \"twilight\", \"dark\"], [\"Vibrant Ink\", \"vibrant_ink\", \"dark\"]];\n  exports.themesByName = {};\n  exports.themes = themeData.map(function (data) {\n    var name = data[1] || data[0].replace(/ /g, \"_\").toLowerCase();\n    var theme = {\n      caption: data[0],\n      theme: \"ace/theme/\" + name,\n      isDark: data[2] == \"dark\",\n      name: name\n    };\n    exports.themesByName[name] = theme;\n    return theme;\n  });\n});\nace.define(\"ace/ext/menu_tools/add_editor_menu_options\", [\"require\", \"exports\", \"module\", \"ace/ext/modelist\", \"ace/ext/themelist\"], function (acequire, exports, module) {\n  'use strict';\n\n  module.exports.addEditorMenuOptions = function addEditorMenuOptions(editor) {\n    var modelist = acequire('../modelist');\n    var themelist = acequire('../themelist');\n    editor.menuOptions = {\n      setNewLineMode: [{\n        textContent: \"unix\",\n        value: \"unix\"\n      }, {\n        textContent: \"windows\",\n        value: \"windows\"\n      }, {\n        textContent: \"auto\",\n        value: \"auto\"\n      }],\n      setTheme: [],\n      setMode: [],\n      setKeyboardHandler: [{\n        textContent: \"ace\",\n        value: \"\"\n      }, {\n        textContent: \"vim\",\n        value: \"ace/keyboard/vim\"\n      }, {\n        textContent: \"emacs\",\n        value: \"ace/keyboard/emacs\"\n      }, {\n        textContent: \"textarea\",\n        value: \"ace/keyboard/textarea\"\n      }, {\n        textContent: \"sublime\",\n        value: \"ace/keyboard/sublime\"\n      }]\n    };\n    editor.menuOptions.setTheme = themelist.themes.map(function (theme) {\n      return {\n        textContent: theme.caption,\n        value: theme.theme\n      };\n    });\n    editor.menuOptions.setMode = modelist.modes.map(function (mode) {\n      return {\n        textContent: mode.name,\n        value: mode.mode\n      };\n    });\n  };\n});\nace.define(\"ace/ext/menu_tools/get_set_functions\", [\"require\", \"exports\", \"module\"], function (acequire, exports, module) {\n  'use strict';\n\n  module.exports.getSetFunctions = function getSetFunctions(editor) {\n    var out = [];\n    var my = {\n      'editor': editor,\n      'session': editor.session,\n      'renderer': editor.renderer\n    };\n    var opts = [];\n    var skip = ['setOption', 'setUndoManager', 'setDocument', 'setValue', 'setBreakpoints', 'setScrollTop', 'setScrollLeft', 'setSelectionStyle', 'setWrapLimitRange'];\n    ['renderer', 'session', 'editor'].forEach(function (esra) {\n      var esr = my[esra];\n      var clss = esra;\n\n      for (var fn in esr) {\n        if (skip.indexOf(fn) === -1) {\n          if (/^set/.test(fn) && opts.indexOf(fn) === -1) {\n            opts.push(fn);\n            out.push({\n              'functionName': fn,\n              'parentObj': esr,\n              'parentName': clss\n            });\n          }\n        }\n      }\n    });\n    return out;\n  };\n});\nace.define(\"ace/ext/menu_tools/generate_settings_menu\", [\"require\", \"exports\", \"module\", \"ace/ext/menu_tools/element_generator\", \"ace/ext/menu_tools/add_editor_menu_options\", \"ace/ext/menu_tools/get_set_functions\", \"ace/ace\"], function (acequire, exports, module) {\n  'use strict';\n\n  var egen = acequire('./element_generator');\n  var addEditorMenuOptions = acequire('./add_editor_menu_options').addEditorMenuOptions;\n  var getSetFunctions = acequire('./get_set_functions').getSetFunctions;\n\n  module.exports.generateSettingsMenu = function generateSettingsMenu(editor) {\n    var elements = [];\n\n    function cleanupElementsList() {\n      elements.sort(function (a, b) {\n        var x = a.getAttribute('contains');\n        var y = b.getAttribute('contains');\n        return x.localeCompare(y);\n      });\n    }\n\n    function wrapElements() {\n      var topmenu = document.createElement('div');\n      topmenu.setAttribute('id', 'ace_settingsmenu');\n      elements.forEach(function (element) {\n        topmenu.appendChild(element);\n      });\n      var el = topmenu.appendChild(document.createElement('div'));\n      var version = acequire(\"../../ace\").version;\n      el.style.padding = \"1em\";\n      el.textContent = \"Ace version \" + version;\n      return topmenu;\n    }\n\n    function createNewEntry(obj, clss, item, val) {\n      var el;\n      var div = document.createElement('div');\n      div.setAttribute('contains', item);\n      div.setAttribute('class', 'ace_optionsMenuEntry');\n      div.setAttribute('style', 'clear: both;');\n      div.appendChild(egen.createLabel(item.replace(/^set/, '').replace(/([A-Z])/g, ' $1').trim(), item));\n\n      if (Array.isArray(val)) {\n        el = egen.createSelection(item, val, clss);\n        el.addEventListener('change', function (e) {\n          try {\n            editor.menuOptions[e.target.id].forEach(function (x) {\n              if (x.textContent !== e.target.textContent) {\n                delete x.selected;\n              }\n            });\n            obj[e.target.id](e.target.value);\n          } catch (err) {\n            throw new Error(err);\n          }\n        });\n      } else if (typeof val === 'boolean') {\n        el = egen.createCheckbox(item, val, clss);\n        el.addEventListener('change', function (e) {\n          try {\n            obj[e.target.id](!!e.target.checked);\n          } catch (err) {\n            throw new Error(err);\n          }\n        });\n      } else {\n        el = egen.createInput(item, val, clss);\n        el.addEventListener('change', function (e) {\n          try {\n            if (e.target.value === 'true') {\n              obj[e.target.id](true);\n            } else if (e.target.value === 'false') {\n              obj[e.target.id](false);\n            } else {\n              obj[e.target.id](e.target.value);\n            }\n          } catch (err) {\n            throw new Error(err);\n          }\n        });\n      }\n\n      el.style.cssText = 'float:right;';\n      div.appendChild(el);\n      return div;\n    }\n\n    function makeDropdown(item, esr, clss, fn) {\n      var val = editor.menuOptions[item];\n      var currentVal = esr[fn]();\n      if (typeof currentVal == 'object') currentVal = currentVal.$id;\n      val.forEach(function (valuex) {\n        if (valuex.value === currentVal) valuex.selected = 'selected';\n      });\n      return createNewEntry(esr, clss, item, val);\n    }\n\n    function handleSet(setObj) {\n      var item = setObj.functionName;\n      var esr = setObj.parentObj;\n      var clss = setObj.parentName;\n      var val;\n      var fn = item.replace(/^set/, 'get');\n\n      if (editor.menuOptions[item] !== undefined) {\n        elements.push(makeDropdown(item, esr, clss, fn));\n      } else if (typeof esr[fn] === 'function') {\n        try {\n          val = esr[fn]();\n\n          if (typeof val === 'object') {\n            val = val.$id;\n          }\n\n          elements.push(createNewEntry(esr, clss, item, val));\n        } catch (e) {}\n      }\n    }\n\n    addEditorMenuOptions(editor);\n    getSetFunctions(editor).forEach(function (setObj) {\n      handleSet(setObj);\n    });\n    cleanupElementsList();\n    return wrapElements();\n  };\n});\nace.define(\"ace/ext/menu_tools/overlay_page\", [\"require\", \"exports\", \"module\", \"ace/lib/dom\"], function (acequire, exports, module) {\n  'use strict';\n\n  var dom = acequire(\"../../lib/dom\");\n  var cssText = \"#ace_settingsmenu, #kbshortcutmenu {\\\nbackground-color: #F7F7F7;\\\ncolor: black;\\\nbox-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\\\npadding: 1em 0.5em 2em 1em;\\\noverflow: auto;\\\nposition: absolute;\\\nmargin: 0;\\\nbottom: 0;\\\nright: 0;\\\ntop: 0;\\\nz-index: 9991;\\\ncursor: default;\\\n}\\\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\\\nbox-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\\\nbackground-color: rgba(255, 255, 255, 0.6);\\\ncolor: black;\\\n}\\\n.ace_optionsMenuEntry:hover {\\\nbackground-color: rgba(100, 100, 100, 0.1);\\\n-webkit-transition: all 0.5s;\\\ntransition: all 0.3s\\\n}\\\n.ace_closeButton {\\\nbackground: rgba(245, 146, 146, 0.5);\\\nborder: 1px solid #F48A8A;\\\nborder-radius: 50%;\\\npadding: 7px;\\\nposition: absolute;\\\nright: -8px;\\\ntop: -8px;\\\nz-index: 1000;\\\n}\\\n.ace_closeButton{\\\nbackground: rgba(245, 146, 146, 0.9);\\\n}\\\n.ace_optionsMenuKey {\\\ncolor: darkslateblue;\\\nfont-weight: bold;\\\n}\\\n.ace_optionsMenuCommand {\\\ncolor: darkcyan;\\\nfont-weight: normal;\\\n}\";\n  dom.importCssString(cssText);\n\n  module.exports.overlayPage = function overlayPage(editor, contentElement, top, right, bottom, left) {\n    top = top ? 'top: ' + top + ';' : '';\n    bottom = bottom ? 'bottom: ' + bottom + ';' : '';\n    right = right ? 'right: ' + right + ';' : '';\n    left = left ? 'left: ' + left + ';' : '';\n    var closer = document.createElement('div');\n    var contentContainer = document.createElement('div');\n\n    function documentEscListener(e) {\n      if (e.keyCode === 27) {\n        closer.click();\n      }\n    }\n\n    closer.style.cssText = 'margin: 0; padding: 0; ' + 'position: fixed; top:0; bottom:0; left:0; right:0;' + 'z-index: 9990; ' + 'background-color: rgba(0, 0, 0, 0.3);';\n    closer.addEventListener('click', function () {\n      document.removeEventListener('keydown', documentEscListener);\n      closer.parentNode.removeChild(closer);\n      editor.focus();\n      closer = null;\n    });\n    document.addEventListener('keydown', documentEscListener);\n    contentContainer.style.cssText = top + right + bottom + left;\n    contentContainer.addEventListener('click', function (e) {\n      e.stopPropagation();\n    });\n    var wrapper = dom.createElement(\"div\");\n    wrapper.style.position = \"relative\";\n    var closeButton = dom.createElement(\"div\");\n    closeButton.className = \"ace_closeButton\";\n    closeButton.addEventListener('click', function () {\n      closer.click();\n    });\n    wrapper.appendChild(closeButton);\n    contentContainer.appendChild(wrapper);\n    contentContainer.appendChild(contentElement);\n    closer.appendChild(contentContainer);\n    document.body.appendChild(closer);\n    editor.blur();\n  };\n});\nace.define(\"ace/ext/settings_menu\", [\"require\", \"exports\", \"module\", \"ace/ext/menu_tools/generate_settings_menu\", \"ace/ext/menu_tools/overlay_page\", \"ace/editor\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var generateSettingsMenu = acequire('./menu_tools/generate_settings_menu').generateSettingsMenu;\n  var overlayPage = acequire('./menu_tools/overlay_page').overlayPage;\n\n  function showSettingsMenu(editor) {\n    var sm = document.getElementById('ace_settingsmenu');\n    if (!sm) overlayPage(editor, generateSettingsMenu(editor), '0', '0', '0');\n  }\n\n  module.exports.init = function (editor) {\n    var Editor = acequire(\"ace/editor\").Editor;\n\n    Editor.prototype.showSettingsMenu = function () {\n      showSettingsMenu(this);\n    };\n  };\n});\n\n(function () {\n  ace.acequire([\"ace/ext/settings_menu\"], function () {});\n})();"],"mappings":"AAAA","sourceRoot":""}