{"version":3,"sources":["webpack:///vendor/brace/mode/space.js","webpack:///../node_modules/brace/mode/space.js"],"names":["flklrJsonp","133","module","exports","ace","define","acequire","oop","BaseFoldMode","FoldMode","Range","inherits","this","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","next","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextHighlightRules","SpaceHighlightRules","$rules","start","token","regex","key","value","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","$id"],"mappings":"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","file":"vendor/brace/mode/space.js","sourcesContent":["flklrJsonp([82],{\n\n/***/ 133:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/space_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar SpaceHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"empty_line\",\n                regex : / */,\n                next : \"key\"\n            },\n            {\n                token : \"empty_line\",\n                regex : /$/,\n                next : \"key\"\n            }\n        ],\n        \"key\" : [\n            {\n                token : \"variable\",\n                regex : /\\S+/\n            },\n            {\n                token : \"empty_line\",\n                regex : /$/,\n                next : \"start\"\n            },{\n                token : \"keyword.operator\",\n                regex : / /,\n                next  : \"value\"\n            }\n        ],\n        \"value\" : [\n            {\n                token : \"keyword.operator\",\n                regex : /$/,\n                next  : \"start\"\n            },\n            {\n                token : \"string\",\n                regex : /[^$]/\n            }\n        ]\n    };\n    \n};\n\noop.inherits(SpaceHighlightRules, TextHighlightRules);\n\nexports.SpaceHighlightRules = SpaceHighlightRules;\n});\n\nace.define(\"ace/mode/space\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/folding/coffee\",\"ace/mode/space_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar FoldMode = acequire(\"./folding/coffee\").FoldMode;\nvar SpaceHighlightRules = acequire(\"./space_highlight_rules\").SpaceHighlightRules;\nvar Mode = function() {\n    this.HighlightRules = SpaceHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function() {\n    \n    this.$id = \"ace/mode/space\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n});\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/space.js","ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/space_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar SpaceHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"empty_line\",\n                regex : / */,\n                next : \"key\"\n            },\n            {\n                token : \"empty_line\",\n                regex : /$/,\n                next : \"key\"\n            }\n        ],\n        \"key\" : [\n            {\n                token : \"variable\",\n                regex : /\\S+/\n            },\n            {\n                token : \"empty_line\",\n                regex : /$/,\n                next : \"start\"\n            },{\n                token : \"keyword.operator\",\n                regex : / /,\n                next  : \"value\"\n            }\n        ],\n        \"value\" : [\n            {\n                token : \"keyword.operator\",\n                regex : /$/,\n                next  : \"start\"\n            },\n            {\n                token : \"string\",\n                regex : /[^$]/\n            }\n        ]\n    };\n    \n};\n\noop.inherits(SpaceHighlightRules, TextHighlightRules);\n\nexports.SpaceHighlightRules = SpaceHighlightRules;\n});\n\nace.define(\"ace/mode/space\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/folding/coffee\",\"ace/mode/space_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar FoldMode = acequire(\"./folding/coffee\").FoldMode;\nvar SpaceHighlightRules = acequire(\"./space_highlight_rules\").SpaceHighlightRules;\nvar Mode = function() {\n    this.HighlightRules = SpaceHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function() {\n    \n    this.$id = \"ace/mode/space\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/brace/mode/space.js\n// module id = 133\n// module chunks = 82"],"sourceRoot":""}