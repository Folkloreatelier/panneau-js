{"version":3,"file":"102.ef2c5ff2d24f0bf43a98.bundle.js","sources":["webpack:///./fields/code/node_modules/brace/mode/lucene.js"],"sourcesContent":["ace.define(\"ace/mode/lucene_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var lang = acequire(\"../lib/lang\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var LuceneHighlightRules = function LuceneHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        token: \"constant.character.negation\",\n        regex: \"[\\\\-]\"\n      }, {\n        token: \"constant.character.interro\",\n        regex: \"[\\\\?]\"\n      }, {\n        token: \"constant.character.asterisk\",\n        regex: \"[\\\\*]\"\n      }, {\n        token: 'constant.character.proximity',\n        regex: '~[0-9]+\\\\b'\n      }, {\n        token: 'keyword.operator',\n        regex: '(?:AND|OR|NOT)\\\\b'\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\(]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\)]\"\n      }, {\n        token: \"keyword\",\n        regex: \"[\\\\S]+:\"\n      }, {\n        token: \"string\",\n        // \" string\n        regex: '\".*?\"'\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }]\n    };\n  };\n\n  oop.inherits(LuceneHighlightRules, TextHighlightRules);\n  exports.LuceneHighlightRules = LuceneHighlightRules;\n});\nace.define(\"ace/mode/lucene\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/lucene_highlight_rules\"], function (acequire, exports, module) {\n  'use strict';\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var LuceneHighlightRules = acequire(\"./lucene_highlight_rules\").LuceneHighlightRules;\n\n  var Mode = function Mode() {\n    this.HighlightRules = LuceneHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$id = \"ace/mode/lucene\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"mappings":"AAAA","sourceRoot":""}