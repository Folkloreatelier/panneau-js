{"version":3,"file":"15.ef2c5ff2d24f0bf43a98.bundle.js","sources":["webpack:///./fields/code/node_modules/brace/ext/keybinding_menu.js"],"sourcesContent":["ace.define(\"ace/ext/menu_tools/overlay_page\", [\"require\", \"exports\", \"module\", \"ace/lib/dom\"], function (acequire, exports, module) {\n  'use strict';\n\n  var dom = acequire(\"../../lib/dom\");\n  var cssText = \"#ace_settingsmenu, #kbshortcutmenu {\\\nbackground-color: #F7F7F7;\\\ncolor: black;\\\nbox-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\\\npadding: 1em 0.5em 2em 1em;\\\noverflow: auto;\\\nposition: absolute;\\\nmargin: 0;\\\nbottom: 0;\\\nright: 0;\\\ntop: 0;\\\nz-index: 9991;\\\ncursor: default;\\\n}\\\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\\\nbox-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\\\nbackground-color: rgba(255, 255, 255, 0.6);\\\ncolor: black;\\\n}\\\n.ace_optionsMenuEntry:hover {\\\nbackground-color: rgba(100, 100, 100, 0.1);\\\n-webkit-transition: all 0.5s;\\\ntransition: all 0.3s\\\n}\\\n.ace_closeButton {\\\nbackground: rgba(245, 146, 146, 0.5);\\\nborder: 1px solid #F48A8A;\\\nborder-radius: 50%;\\\npadding: 7px;\\\nposition: absolute;\\\nright: -8px;\\\ntop: -8px;\\\nz-index: 1000;\\\n}\\\n.ace_closeButton{\\\nbackground: rgba(245, 146, 146, 0.9);\\\n}\\\n.ace_optionsMenuKey {\\\ncolor: darkslateblue;\\\nfont-weight: bold;\\\n}\\\n.ace_optionsMenuCommand {\\\ncolor: darkcyan;\\\nfont-weight: normal;\\\n}\";\n  dom.importCssString(cssText);\n\n  module.exports.overlayPage = function overlayPage(editor, contentElement, top, right, bottom, left) {\n    top = top ? 'top: ' + top + ';' : '';\n    bottom = bottom ? 'bottom: ' + bottom + ';' : '';\n    right = right ? 'right: ' + right + ';' : '';\n    left = left ? 'left: ' + left + ';' : '';\n    var closer = document.createElement('div');\n    var contentContainer = document.createElement('div');\n\n    function documentEscListener(e) {\n      if (e.keyCode === 27) {\n        closer.click();\n      }\n    }\n\n    closer.style.cssText = 'margin: 0; padding: 0; ' + 'position: fixed; top:0; bottom:0; left:0; right:0;' + 'z-index: 9990; ' + 'background-color: rgba(0, 0, 0, 0.3);';\n    closer.addEventListener('click', function () {\n      document.removeEventListener('keydown', documentEscListener);\n      closer.parentNode.removeChild(closer);\n      editor.focus();\n      closer = null;\n    });\n    document.addEventListener('keydown', documentEscListener);\n    contentContainer.style.cssText = top + right + bottom + left;\n    contentContainer.addEventListener('click', function (e) {\n      e.stopPropagation();\n    });\n    var wrapper = dom.createElement(\"div\");\n    wrapper.style.position = \"relative\";\n    var closeButton = dom.createElement(\"div\");\n    closeButton.className = \"ace_closeButton\";\n    closeButton.addEventListener('click', function () {\n      closer.click();\n    });\n    wrapper.appendChild(closeButton);\n    contentContainer.appendChild(wrapper);\n    contentContainer.appendChild(contentElement);\n    closer.appendChild(contentContainer);\n    document.body.appendChild(closer);\n    editor.blur();\n  };\n});\nace.define(\"ace/ext/menu_tools/get_editor_keyboard_shortcuts\", [\"require\", \"exports\", \"module\", \"ace/lib/keys\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var keys = acequire(\"../../lib/keys\");\n\n  module.exports.getEditorKeybordShortcuts = function (editor) {\n    var KEY_MODS = keys.KEY_MODS;\n    var keybindings = [];\n    var commandMap = {};\n    editor.keyBinding.$handlers.forEach(function (handler) {\n      var ckb = handler.commandKeyBinding;\n\n      for (var i in ckb) {\n        var key = i.replace(/(^|-)\\w/g, function (x) {\n          return x.toUpperCase();\n        });\n        var commands = ckb[i];\n        if (!Array.isArray(commands)) commands = [commands];\n        commands.forEach(function (command) {\n          if (typeof command != \"string\") command = command.name;\n\n          if (commandMap[command]) {\n            commandMap[command].key += \"|\" + key;\n          } else {\n            commandMap[command] = {\n              key: key,\n              command: command\n            };\n            keybindings.push(commandMap[command]);\n          }\n        });\n      }\n    });\n    return keybindings;\n  };\n});\nace.define(\"ace/ext/keybinding_menu\", [\"require\", \"exports\", \"module\", \"ace/editor\", \"ace/ext/menu_tools/overlay_page\", \"ace/ext/menu_tools/get_editor_keyboard_shortcuts\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var Editor = acequire(\"ace/editor\").Editor;\n\n  function showKeyboardShortcuts(editor) {\n    if (!document.getElementById('kbshortcutmenu')) {\n      var overlayPage = acequire('./menu_tools/overlay_page').overlayPage;\n      var getEditorKeybordShortcuts = acequire('./menu_tools/get_editor_keyboard_shortcuts').getEditorKeybordShortcuts;\n      var kb = getEditorKeybordShortcuts(editor);\n      var el = document.createElement('div');\n      var commands = kb.reduce(function (previous, current) {\n        return previous + '<div class=\"ace_optionsMenuEntry\"><span class=\"ace_optionsMenuCommand\">' + current.command + '</span> : ' + '<span class=\"ace_optionsMenuKey\">' + current.key + '</span></div>';\n      }, '');\n      el.id = 'kbshortcutmenu';\n      el.innerHTML = '<h1>Keyboard Shortcuts</h1>' + commands + '</div>';\n      overlayPage(editor, el, '0', '0', '0', null);\n    }\n  }\n\n  module.exports.init = function (editor) {\n    Editor.prototype.showKeyboardShortcuts = function () {\n      showKeyboardShortcuts(this);\n    };\n\n    editor.commands.addCommands([{\n      name: \"showKeyboardShortcuts\",\n      bindKey: {\n        win: \"Ctrl-Alt-h\",\n        mac: \"Command-Alt-h\"\n      },\n      exec: function exec(editor, line) {\n        editor.showKeyboardShortcuts();\n      }\n    }]);\n  };\n});\n\n(function () {\n  ace.acequire([\"ace/ext/keybinding_menu\"], function () {});\n})();"],"mappings":"AAAA","sourceRoot":""}