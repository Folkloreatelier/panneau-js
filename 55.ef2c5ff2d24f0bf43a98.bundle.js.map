{"version":3,"file":"55.ef2c5ff2d24f0bf43a98.bundle.js","sources":["webpack:///./fields/code/node_modules/brace/mode/drools.js"],"sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function DocCommentHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/java_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var JavaHighlightRules = function JavaHighlightRules() {\n    var keywords = \"abstract|continue|for|new|switch|\" + \"assert|default|goto|package|synchronized|\" + \"boolean|do|if|private|this|\" + \"break|double|implements|protected|throw|\" + \"byte|else|import|public|throws|\" + \"case|enum|instanceof|return|transient|\" + \"catch|extends|int|short|try|\" + \"char|final|interface|static|void|\" + \"class|finally|long|strictfp|volatile|\" + \"const|float|native|super|while\";\n    var buildinConstants = \"null|Infinity|NaN|undefined\";\n    var langClasses = \"AbstractMethodError|AssertionError|ClassCircularityError|\" + \"ClassFormatError|Deprecated|EnumConstantNotPresentException|\" + \"ExceptionInInitializerError|IllegalAccessError|\" + \"IllegalThreadStateException|InstantiationError|InternalError|\" + \"NegativeArraySizeException|NoSuchFieldError|Override|Process|\" + \"ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|\" + \"SuppressWarnings|TypeNotPresentException|UnknownError|\" + \"UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|\" + \"InstantiationException|IndexOutOfBoundsException|\" + \"ArrayIndexOutOfBoundsException|CloneNotSupportedException|\" + \"NoSuchFieldException|IllegalArgumentException|NumberFormatException|\" + \"SecurityException|Void|InheritableThreadLocal|IllegalStateException|\" + \"InterruptedException|NoSuchMethodException|IllegalAccessException|\" + \"UnsupportedOperationException|Enum|StrictMath|Package|Compiler|\" + \"Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|\" + \"NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|\" + \"NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|\" + \"Character|Boolean|StackTraceElement|Appendable|StringBuffer|\" + \"Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|\" + \"StackOverflowError|OutOfMemoryError|VirtualMachineError|\" + \"ArrayStoreException|ClassCastException|LinkageError|\" + \"NoClassDefFoundError|ClassNotFoundException|RuntimeException|\" + \"Exception|ThreadDeath|Error|Throwable|System|ClassLoader|\" + \"Cloneable|Class|CharSequence|Comparable|String|Object\";\n    var keywordMapper = this.createKeywordMapper({\n      \"variable.language\": \"this\",\n      \"keyword\": keywords,\n      \"constant.language\": buildinConstants,\n      \"support.function\": langClasses\n    }, \"identifier\");\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: /0(?:[xX][0-9a-fA-F][0-9a-fA-F_]*|[bB][01][01_]*)[LlSsDdFfYy]?\\b/\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: /[+-]?\\d[\\d_]*(?:(?:\\.[\\d_]*)?(?:[eE][+-]?[\\d_]+)?)?[LlSsDdFfYy]?\\b/\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n      }, {\n        token: \"lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \".*?\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        token: \"comment\",\n        // comment spanning whole line\n        regex: \".+\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n  };\n\n  oop.inherits(JavaHighlightRules, TextHighlightRules);\n  exports.JavaHighlightRules = JavaHighlightRules;\n});\nace.define(\"ace/mode/drools_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\", \"ace/mode/java_highlight_rules\", \"ace/mode/doc_comment_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n  var JavaHighlightRules = acequire(\"./java_highlight_rules\").JavaHighlightRules;\n  var DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var identifierRe = \"[a-zA-Z\\\\$_\\xA1-\\uFFFF][a-zA-Z\\\\d\\\\$_\\xA1-\\uFFFF]*\";\n  var packageIdentifierRe = \"[a-zA-Z\\\\$_\\xA1-\\uFFFF][\\\\.a-zA-Z\\\\d\\\\$_\\xA1-\\uFFFF]*\";\n\n  var DroolsHighlightRules = function DroolsHighlightRules() {\n    var keywords = \"date|effective|expires|lock|on|active|no|loop|auto|focus\" + \"|activation|group|agenda|ruleflow|duration|timer|calendars|refract|direct\" + \"|dialect|salience|enabled|attributes|extends|template\" + \"|function|contains|matches|eval|excludes|soundslike\" + \"|memberof|not|in|or|and|exists|forall|over|from|entry|point|accumulate|acc|collect\" + \"|action|reverse|result|end|init|instanceof|extends|super|boolean|char|byte|short\" + \"|int|long|float|double|this|void|class|new|case|final|if|else|for|while|do\" + \"|default|try|catch|finally|switch|synchronized|return|throw|break|continue|assert\" + \"|modify|static|public|protected|private|abstract|native|transient|volatile\" + \"|strictfp|throws|interface|enum|implements|type|window|trait|no-loop|str\";\n    var langClasses = \"AbstractMethodError|AssertionError|ClassCircularityError|\" + \"ClassFormatError|Deprecated|EnumConstantNotPresentException|\" + \"ExceptionInInitializerError|IllegalAccessError|\" + \"IllegalThreadStateException|InstantiationError|InternalError|\" + \"NegativeArraySizeException|NoSuchFieldError|Override|Process|\" + \"ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|\" + \"SuppressWarnings|TypeNotPresentException|UnknownError|\" + \"UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|\" + \"InstantiationException|IndexOutOfBoundsException|\" + \"ArrayIndexOutOfBoundsException|CloneNotSupportedException|\" + \"NoSuchFieldException|IllegalArgumentException|NumberFormatException|\" + \"SecurityException|Void|InheritableThreadLocal|IllegalStateException|\" + \"InterruptedException|NoSuchMethodException|IllegalAccessException|\" + \"UnsupportedOperationException|Enum|StrictMath|Package|Compiler|\" + \"Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|\" + \"NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|\" + \"NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|\" + \"Character|Boolean|StackTraceElement|Appendable|StringBuffer|\" + \"Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|\" + \"StackOverflowError|OutOfMemoryError|VirtualMachineError|\" + \"ArrayStoreException|ClassCastException|LinkageError|\" + \"NoClassDefFoundError|ClassNotFoundException|RuntimeException|\" + \"Exception|ThreadDeath|Error|Throwable|System|ClassLoader|\" + \"Cloneable|Class|CharSequence|Comparable|String|Object\";\n    var keywordMapper = this.createKeywordMapper({\n      \"variable.language\": \"this\",\n      \"keyword\": keywords,\n      \"constant.language\": \"null\",\n      \"support.class\": langClasses,\n      \"support.function\": \"retract|update|modify|insert\"\n    }, \"identifier\");\n\n    var stringRules = function stringRules() {\n      return [{\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }];\n    };\n\n    var basicPreRules = function basicPreRules(blockCommentRules) {\n      return [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: blockCommentRules\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }];\n    };\n\n    var blockCommentRules = function blockCommentRules(returnRule) {\n      return [{\n        token: \"comment.block\",\n        // closing comment\n        regex: \".*?\\\\*\\\\/\",\n        next: returnRule\n      }, {\n        token: \"comment.block\",\n        // comment spanning whole line\n        regex: \".+\"\n      }];\n    };\n\n    var basicPostRules = function basicPostRules() {\n      return [{\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n      }, {\n        token: \"lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }];\n    };\n\n    this.$rules = {\n      \"start\": [].concat(basicPreRules(\"block.comment\"), [{\n        token: \"entity.name.type\",\n        regex: \"@[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(package)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(import)(\\\\s+)(function)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(import)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\", \"text\", \"variable\"],\n        regex: \"(global)(\\\\s+)(\" + packageIdentifierRe + \")(\\\\s+)(\" + identifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(declare)(\\\\s+)(trait)(\\\\s+)(\" + identifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(declare)(\\\\s+)(\" + identifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(extends)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(rule)(\\\\s+)\",\n        next: \"asset.name\"\n      }], stringRules(), [{\n        token: [\"variable.other\", \"text\", \"text\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(:)\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(query)(\\\\s+)\",\n        next: \"asset.name\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(when)(\\\\s*)\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(then)(\\\\s*)\",\n        next: \"java-start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }], basicPostRules()),\n      \"block.comment\": blockCommentRules(\"start\"),\n      \"asset.name\": [{\n        token: \"entity.name\",\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"entity.name\",\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"entity.name\",\n        regex: identifierRe\n      }, {\n        regex: \"\",\n        token: \"empty\",\n        next: \"start\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.embedRules(JavaHighlightRules, \"java-\", [{\n      token: \"support.function\",\n      regex: \"\\\\b(insert|modify|retract|update)\\\\b\"\n    }, {\n      token: \"keyword\",\n      regex: \"\\\\bend\\\\b\",\n      next: \"start\"\n    }]);\n  };\n\n  oop.inherits(DroolsHighlightRules, TextHighlightRules);\n  exports.DroolsHighlightRules = DroolsHighlightRules;\n});\nace.define(\"ace/mode/folding/drools\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\", \"ace/token_iterator\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n  var TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /\\b(rule|declare|query|when|then)\\b/;\n    this.foldingStopMarker = /\\bend\\b/;\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n\n        if (match[1]) {\n          var position = {\n            row: row,\n            column: line.length\n          };\n          var iterator = new TokenIterator(session, position.row, position.column);\n          var seek = \"end\";\n          var token = iterator.getCurrentToken();\n\n          if (token.value == \"when\") {\n            seek = \"then\";\n          }\n\n          while (token) {\n            if (token.value == seek) {\n              return Range.fromPoints(position, {\n                row: iterator.getCurrentTokenRow(),\n                column: iterator.getCurrentTokenColumn()\n              });\n            }\n\n            token = iterator.stepForward();\n          }\n        }\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/drools\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/drools_highlight_rules\", \"ace/mode/folding/drools\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var DroolsHighlightRules = acequire(\"./drools_highlight_rules\").DroolsHighlightRules;\n  var DroolsFoldMode = acequire(\"./folding/drools\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = DroolsHighlightRules;\n    this.foldingRules = new DroolsFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.$id = \"ace/mode/drools\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"mappings":"AAAA","sourceRoot":""}